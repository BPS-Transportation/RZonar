[{"path":"/articles/quickstart.html","id":"capabilities-and-limitations","dir":"Articles","previous_headings":"","what":"Capabilities and limitations","title":"RZonar Quickstart","text":"RZonar comprehensive Zonar client, aspire . currently focuses just API endpoints, including schedule, path, zones, idle events, assets. RZonar package provide anything close 1:1 mapping Zonar API; ’s want just use Zonar API directly, e.g., via httr2 package R. Rather, RZonar offers high-level data retrieval formatting using Zonar API. aspires like R-based version Zonar website, providing relatively easy access Zonar data.","code":""},{"path":"/articles/quickstart.html","id":"function-naming-convention","dir":"Articles","previous_headings":"","what":"Function naming convention","title":"RZonar Quickstart","text":"functions RZonar prefixed zonar_get. makes somewhat verbose function names, makes auto-completion easy modern editors IDEs. Assuming use Rstudio similarly capable development environment can generall just type zonar_ browse completion suggesions find function looking .","code":""},{"path":"/articles/quickstart.html","id":"time-varying-and-time-invariant-data","dir":"Articles","previous_headings":"","what":"Time-varying and time-invariant data","title":"RZonar Quickstart","text":"Many functions provided RZonar require start end arguments. clue function returns time-varying data. arguments may specified character strings formatted YYY-MM-DD HH:MM:SS. example can retrieve path data 8-9 December 14th 2022 like : functions require start end arguments (therefore return time-varying data) include zonar_get_idle_events zonar_get_schedules. Functions without start end arguments often return time-inverient data. example, can retrieve list Assets (buses) like : time-invariant data can change, e.g., new asset added system. However Zonar API allow retrieve time-stamped versions, .e. easily get asset list appeared arbitrary historical date. RZonar currently provide much way analysis visualization, often convenient use popular R packages purpose. packages make examining, manipulating, plotting data returned RZonar easier:","code":"library(RZonar)  paths_12.12.22 <- zonar_get_paths(   start = \"2022-12-14 08:00:00\", end = \"2022-12-14 09:00:00\"   ) assets <- zonar_get_assets() library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(sf) #> Linking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE glimpse(assets) #> Rows: 1,500 #> Columns: 20 #> $ assetID          <chr> \"829\", \"190\", \"687\", \"688\", \"690\", \"693\", \"885\", \"868… #> $ Asset            <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"B445\", \"MS15… #> $ tag              <chr> \"0\", \"25783\", \"25587\", \"25588\", \"21971\", \"26655\", \"0\"… #> $ fleet            <chr> \"0\", \"009898\", \"081\", \"082\", \"084\", \"087\", \"1\", \"1002… #> $ type             <chr> \"Standard\", \"Standard\", \"Standard\", \"Standard\", \"Stan… #> $ subtype          <chr> \"Auto-Created Sub-Type\", NA, \"MS\", NA, NA, NA, \"MS\", … #> $ mileage          <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"… #> $ location         <chr> \"UNKNOWN\", \"Readville Yard\", \"Washington Yard\", \"Wash… #> $ mileoffset       <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"… #> $ enginehouroffset <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"1\"… #> $ inservice        <chr> \"02 Sep 2010\", \"09 Jul 2008\", \"09 Jul 2008\", \"09 Jul … #> $ yardstat.stat    <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\"… #> $ status           <chr> \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\"… #> $ opstatus         <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\"… #> $ name             <chr> NA, \"25783\", \"25587\", \"25588\", \"SB21971\", \"26655\", NA… #> $ vin              <chr> NA, \"4UZ3CJFA0YCG03369\", \"1GBHG31F611192561\", \"1GBHG3… #> $ mfg              <chr> NA, \"FREIGHTLNR\", \"CHEVY\", \"CHEVY\", \"CHEVY\", \"CHEVY\",… #> $ gps              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ yardstat.yard    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ exsid            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…"},{"path":"/articles/quickstart.html","id":"using-geographical-information","dir":"Articles","previous_headings":"","what":"Using geographical information","title":"RZonar Quickstart","text":"RZonar typically returns geometry Lat/Lon points well-known text simplicity avoid additional R package dependencies.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ista Zahn. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zahn (2023). RZonar: Conveniently access Zonar API R. https://github.com/BostonPublicSchools/RZonar, https://bostonpublicschools.github.io/RZonar/.","code":"@Manual{,   title = {RZonar: Conveniently access the Zonar API from R},   author = {Ista Zahn},   year = {2023},   note = {https://github.com/BostonPublicSchools/RZonar, https://bostonpublicschools.github.io/RZonar/}, }"},{"path":"/index.html","id":"rzonar","dir":"","previous_headings":"","what":"Conveniently access the Zonar API from R","title":"Conveniently access the Zonar API from R","text":"RZonar makes easy retrieve cleanup data Zonar API.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Conveniently access the Zonar API from R","text":"development version RZonar available GitHub. Install :","code":"# install.packages(\"remotes\") remotes::install_github(\"BostonPublicSchools/RZonar\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Conveniently access the Zonar API from R","text":"basic example shows retrieve schedule events specified time period: data returned Zonar API always formatted conveniently. RZonar also provides convenience functions post-process data returned API:","code":"library(RZonar) sched_data <- zonar_get_schedules(   start = paste(Sys.Date(), \"07:00:00\"),   end = paste(Sys.Date(), \"07:15:00\")) dplyr::glimpse(sched_data[0,]) #> Rows: 0 #> Columns: 11 #> $ zoneID             <int>  #> $ Zone               <chr>  #> $ category           <chr>  #> $ `Asset ID`         <chr>  #> $ Asset              <chr>  #> $ Time               <dttm>  #> $ `IN/OUT`           <chr>  #> $ `Time In Zone`     <chr>  #> $ Duration           <chr>  #> $ `Duration Total`   <chr>  #> $ `Distance (Miles)` <chr> dplyr::glimpse(zonar_cleanup(sched_data)[0,]) #> Rows: 0 #> Columns: 9 #> $ zoneID     <int>  #> $ Zone       <chr>  #> $ category   <chr>  #> $ `Asset ID` <chr>  #> $ Asset      <chr>  #> $ tgroup     <int>  #> $ time_in    <dttm>  #> $ time_out   <dttm>  #> $ duration   <drtn>  secs"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Conveniently access the Zonar API from R","text":"exported functions documented package includes vignettes help understand package structured good . -line documentation can found https://bostonpublicschools.github.io/RZonar/.","code":""},{"path":"/reference/get_zonar_schedules_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for all routes — get_zonar_schedules_all","title":"Get zonar schedule data for all routes — get_zonar_schedules_all","text":"basic idea use Zonar API documented https://support.zonarsystems.net/hc/en-us/categories/360000020371-API-Portal retrieve time bus (asset) reaches route anchor (zone). schedule report documented https://support.zonarsystems.net/hc/en-us/articles/360018372852-GPS-Schedule-Report can give us information, . options supported Zonar API calls : 1. assets zones (max) 15 minute window, 2. single asset zones, 3. assets single zone. now pulling 15 minute increments, needed can change iterate zones assets instead time.","code":""},{"path":"/reference/get_zonar_schedules_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for all routes — get_zonar_schedules_all","text":"","code":"get_zonar_schedules_all(start, end, timezone = \"America/New_York\")"},{"path":"/reference/get_zonar_schedules_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for all routes — get_zonar_schedules_all","text":"start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. timezone Defaults \"America/New_York\"","code":""},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/RZonar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RZonar: Conveniently access the Zonar API from R — RZonar-package","title":"RZonar: Conveniently access the Zonar API from R — RZonar-package","text":"Zonar API documented https://support.zonarsystems.net/hc/en-us enables programatic retrieval Zonar data. R package wraps API, making convenient retrieve specific bulk data Zonar API.","code":""},{"path":[]},{"path":"/reference/zonar_cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup data from the Zonar API — zonar_cleanup","title":"Cleanup data from the Zonar API — zonar_cleanup","text":"Zonar API sometimes returns badly formatted data. Use zonar_cleanup tidy . Use zonar_cleanup augment format sometimes messy data returned zonar API.","code":""},{"path":"/reference/zonar_cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup data from the Zonar API — zonar_cleanup","text":"","code":"zonar_cleanup(data)  # S3 method for zonarsched zonar_cleanup(data)"},{"path":"/reference/zonar_cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleanup data from the Zonar API — zonar_cleanup","text":"data Data returned one zonar_get_* functions.","code":""},{"path":"/reference/zonar_cleanup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cleanup data from the Zonar API — zonar_cleanup","text":"Assets can recorded repeatedly going zone short periods time, try clean . Another problem assets can pass zones incidentally. zonar_cleanup tries adress grouping repeated gps zone events occur short time, keeping separate pass-throughs separate.","code":""},{"path":"/reference/zonar_cleanup.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Cleanup data from the Zonar API — zonar_cleanup","text":"zonar_cleanup(zonarsched): Cleanup Zonar schedule data","code":""},{"path":"/reference/zonar_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve zonar API credentials — zonar_credentials","title":"Retrieve zonar API credentials — zonar_credentials","text":"RZonar requires Zonar company, username, password set environment variables. function checks make sure available gives instructions setting .","code":""},{"path":"/reference/zonar_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve zonar API credentials — zonar_credentials","text":"","code":"zonar_credentials(customer, user, pass)"},{"path":"/reference/zonar_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve zonar API credentials — zonar_credentials","text":"customer Zonar customer id, retrieved ZONAR_CUSTOMER environment variable default can overridden . user Zonar username, retrieved ZONAR_USER environment variable default can overridden . pass Zonar password, retrieved ZONAR_CUSTOMER environment variable default can overridden .","code":""},{"path":"/reference/zonar_get_assets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Zonar asset (bus) data — zonar_get_assets","title":"Get Zonar asset (bus) data — zonar_get_assets","text":"zonar_get_assets retrieves zonar asset (bus) information Zonar API","code":""},{"path":"/reference/zonar_get_assets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Zonar asset (bus) data — zonar_get_assets","text":"","code":"zonar_get_assets(assets = NULL)  zonar_get_gps_units()  zonar_get_asset_usage()"},{"path":"/reference/zonar_get_assets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Zonar asset (bus) data — zonar_get_assets","text":"assets Character vector asset ids retrieve. NULL (default) retrieve assets. NULL, character vector must Zonar Asset IDs retrieve.","code":""},{"path":"/reference/zonar_get_assets.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Zonar asset (bus) data — zonar_get_assets","text":"zonar_get_gps_units(): Get gps info zonar_get_asset_usage(): Get asset usage","code":""},{"path":"/reference/zonar_get_assets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Zonar asset (bus) data — zonar_get_assets","text":"","code":"assettestall <- zonar_get_assets() dplyr::glimpse(assettestall) #> Rows: 1,500 #> Columns: 20 #> $ assetID          <chr> \"829\", \"190\", \"687\", \"688\", \"690\", \"693\", \"885\", \"868… #> $ Asset            <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"B445\", \"MS15… #> $ tag              <chr> \"0\", \"25783\", \"25587\", \"25588\", \"21971\", \"26655\", \"0\"… #> $ fleet            <chr> \"0\", \"009898\", \"081\", \"082\", \"084\", \"087\", \"1\", \"1002… #> $ type             <chr> \"Standard\", \"Standard\", \"Standard\", \"Standard\", \"Stan… #> $ subtype          <chr> \"Auto-Created Sub-Type\", NA, \"MS\", NA, NA, NA, \"MS\", … #> $ mileage          <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"… #> $ location         <chr> \"UNKNOWN\", \"Readville Yard\", \"Washington Yard\", \"Wash… #> $ mileoffset       <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"… #> $ enginehouroffset <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"1\"… #> $ inservice        <chr> \"02 Sep 2010\", \"09 Jul 2008\", \"09 Jul 2008\", \"09 Jul … #> $ yardstat.stat    <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\"… #> $ status           <chr> \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\"… #> $ opstatus         <chr> \"unknown\", \"unknown\", \"unknown\", \"unknown\", \"unknown\"… #> $ name             <chr> NA, \"25783\", \"25587\", \"25588\", \"SB21971\", \"26655\", NA… #> $ vin              <chr> NA, \"4UZ3CJFA0YCG03369\", \"1GBHG31F611192561\", \"1GBHG3… #> $ mfg              <chr> NA, \"FREIGHTLNR\", \"CHEVY\", \"CHEVY\", \"CHEVY\", \"CHEVY\",… #> $ gps              <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ yardstat.yard    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ exsid            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…  assettest <- zonar_get_assets(assets = c(\"586\", \"1046\")) dplyr::glimpse(assettest) #> Rows: 2 #> Columns: 18 #> $ assetID          <chr> \"586\", \"1046\" #> $ Asset            <chr> \"HS288\", \"B428\" #> $ name             <chr> \"SB35252\", \"SB36350\" #> $ tag              <chr> \"30487\", \"36350\" #> $ vin              <chr> \"1BAKACBH2GF320366\", \"1BAKGCPHXCF287098\" #> $ fleet            <chr> \"HS288\", \"B428\" #> $ type             <chr> \"Standard\", \"Standard\" #> $ subtype          <chr> \"HS\", \"Full\" #> $ mileage          <chr> \"0\", \"0\" #> $ location         <chr> \"Freeport Yard\", \"Freeport Yard\" #> $ mileoffset       <chr> \"0\", \"1487\" #> $ enginehouroffset <chr> \"0\", \"0\" #> $ mfg              <chr> \"Blue Bird\", \"BlUE BIRD/2011\" #> $ inservice        <chr> \"09 Jul 2008\", \"18 Aug 2011\" #> $ yardstat.stat    <chr> \"unknown\", \"unknown\" #> $ status           <chr> \"1\", \"1\" #> $ opstatus         <chr> \"unknown\", \"unknown\" #> $ gps              <chr> \"30020648\", \"30525798\""},{"path":"/reference/zonar_get_idle_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Zonar asset idle/stop events for all assets — zonar_get_idle_events","title":"Get Zonar asset idle/stop events for all assets — zonar_get_idle_events","text":"zonar_get_idle_events retrieves zonar asset (bus) idle event information assets.","code":""},{"path":"/reference/zonar_get_idle_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Zonar asset idle/stop events for all assets — zonar_get_idle_events","text":"","code":"zonar_get_idle_events(   start,   end,   zones = NULL,   assets = NULL,   timezone = \"America/New_York\" )"},{"path":"/reference/zonar_get_idle_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Zonar asset idle/stop events for all assets — zonar_get_idle_events","text":"start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. zones Character vector zone names (IDs!) retrieve. NULL (default) retrieve zones. assets Character vector asset ids retrieve. NULL (default) retrieve assets. timezone Defaults \"America/New_York\"","code":""},{"path":"/reference/zonar_get_idle_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Zonar asset idle/stop events for all assets — zonar_get_idle_events","text":"","code":"assettest <- zonar_get_idle_events( start = \"2022-11-30 08:00:00\", end = \"2022-11-30 08:30:00\",) dplyr::glimpse(assettest) #> Rows: 183 #> Columns: 10 #> $ tag          <chr> \"0\", \"0\", \"33973\", \"0\", \"0\", \"0\", \"34382\", \"34396\", \"3439… #> $ fleet        <chr> \"B552\", \"B553\", \"HS461\", \"B554\", \"B555\", \"HS485\", \"HS486\"… #> $ type         <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0… #> $ id           <chr> \"39\", \"49\", \"53\", \"55\", \"57\", \"106\", \"107\", \"112\", \"114\",… #> $ exsid        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"… #> $ event.from   <dttm> 2022-11-30 08:13:32, 2022-11-30 08:13:16, 2022-11-30 08:… #> $ event.to     <dttm> 2022-11-30 08:22:07, 2022-11-30 08:15:28, 2022-11-30 08:… #> $ event.length <chr> \"00:08:35\", \"00:02:12\", \"00:13:37\", \"00:22:37\", \"00:04:51… #> $ lat          <chr> \"-71.0037297\", \"-71.1597292\", \"-71.0615093\", \"-71.0530157… #> $ long         <chr> \"42.3886043\", \"42.3459322\", \"42.2954727\", \"42.293592\", \"4…"},{"path":"/reference/zonar_get_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for a specific zone — zonar_get_paths","title":"Get zonar schedule data for a specific zone — zonar_get_paths","text":"Get zonar schedule data specific zone","code":""},{"path":"/reference/zonar_get_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for a specific zone — zonar_get_paths","text":"","code":"zonar_get_paths(start, end, assets = NULL, timezone = \"America/New_York\")"},{"path":"/reference/zonar_get_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for a specific zone — zonar_get_paths","text":"start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. assets Character vector Zonar asset ids retrieve. NULL (default) retrieve paths assets. timezone Defaults \"America/New_York\"","code":""},{"path":"/reference/zonar_get_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get zonar schedule data for a specific zone — zonar_get_paths","text":"","code":"library(RZonar)  pathtest_all <- zonar_get_paths(   start = \"2022-11-30 08:10:00\",   end = \"2022-11-30 08:40:00\") #> Error in dplyr::mutate(out, datetime = lubridate::ymd_hms(paste(.data$Date,     .data$`Time(EST)`), tz = timezone)): ℹ In argument: `datetime = lubridate::ymd_hms(paste(.data$Date, #>   .data$`Time(EST)`), tz = timezone)`. #> Caused by error in `` .data$`Time(EST)` ``: #> ! Column `Time(EST)` not found in `.data`. dplyr::glimpse(pathtest_all) #> Error in dplyr::glimpse(pathtest_all): object 'pathtest_all' not found pathtest_586 <- zonar_get_paths(   start = \"2022-11-30 08:10:00\",   end = \"2022-11-30 08:40:00\",   assets = \"586\") #> Error in dplyr::mutate(out, datetime = lubridate::ymd_hms(paste(.data$Date,     .data$`Time(EST)`), tz = timezone)): ℹ In argument: `datetime = lubridate::ymd_hms(paste(.data$Date, #>   .data$`Time(EST)`), tz = timezone)`. #> Caused by error in `` .data$`Time(EST)` ``: #> ! Column `Time(EST)` not found in `.data`. dplyr::glimpse(pathtest_586) #> Error in dplyr::glimpse(pathtest_586): object 'pathtest_586' not found"},{"path":"/reference/zonar_get_schedules.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for all routes — zonar_get_schedules","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"Use zonar_get_schedules retrieve time bus (asset) reaches route anchor (zone) Zonar API","code":""},{"path":"/reference/zonar_get_schedules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"","code":"zonar_get_schedules(   start,   end,   by = c(\"time\", \"zone\", \"asset\"),   zones = NULL,   assets = NULL,   timezone = \"America/New_York\",   reformat = FALSE,   include_geometry = FALSE,   cachedir = NULL,   omit_categories = NULL,   test = FALSE )"},{"path":"/reference/zonar_get_schedules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. Whether split requests time zone hood. default reasonable value chosen based amount data request (.e., size interval start end. zones Character vector zone names (IDs!) retrieve. NULL (default) retrieve zones. assets Integer vector giving Zonar asset IDs (names) asset retrieve. timezone Defaults \"America/New_York\" reformat TRUE cleanup re-format data row represents \"Zone event\", .e., discrete entry /exit zone. Otherwise leave date original format returned Zonar. Defaults FALSE. include_geometry TRUE also return geographic polygon showing location extent Zone. Defaults FALSE. cachedir Ignored, always uses .zonarCache now. omit_categories Character vector containing zone categories skip/omit. test Set TRUE testing purposes, otherwise slow.","code":""},{"path":"/reference/zonar_get_schedules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"Zonar schedule report API can give us information, . Using R wrapper makes easy retrieve bulk schedule reports Zonar API convenient format can easily saved database spreadsheet. Note retrieving data short intervals (one day less) generally faster setting = \"time\", bulk retrieval weeks months data faster setting = \"zone\". default zonar_get_shedules_all try pick best setting depending start end parameters give . default retrieve zones assets time period specified start end. can retrieve specified list zones assets via zones assets arguments. However, due way Zonar API works specify . Note zones must specified name, assets must specified ID; see zonar_get_assets() need look IDs asset names.","code":""},{"path":"/reference/zonar_get_schedules.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"zonar_get_schedules(): Get zonar schedule data routes","code":""},{"path":"/reference/zonar_get_schedules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"","code":"library(RZonar) ## use by=\"time\" for short duration, e.g. < 1 day schedtest1 <- zonar_get_schedules(   start = \"2022-11-30 08:00:00\",   end = \"2022-11-30 08:40:00\",   by = \"time\") dplyr::glimpse(schedtest1) #> Rows: 2,626 #> Columns: 11 #> $ zoneID             <int> 2272, 2272, 2272, 2272, 2290, 2290, 2290, 2290, 229… #> $ Zone               <chr> \"100 Desoto Rd\", \"100 Desoto Rd\", \"100 Desoto Rd\", … #> $ category           <chr> \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH… #> $ `Asset ID`         <chr> \"1521\", \"1521\", \"161\", \"161\", \"1051\", \"1051\", \"538\"… #> $ Asset              <chr> \"HS521\", \"HS521\", \"HS381\", \"HS381\", \"B433\", \"B433\",… #> $ Time               <dttm> 2022-11-30 08:11:17, 2022-11-30 08:12:05, 2022-11-… #> $ `IN/OUT`           <chr> \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\",… #> $ `Time In Zone`     <chr> NA, \"00:00:48\", NA, \"00:00:30\", NA, \"00:00:36\", NA,… #> $ Duration           <chr> \"00:00:00\", \"00:00:48\", \"00:00:00\", \"00:00:30\", \"00… #> $ `Duration Total`   <chr> \"00:00:00\", \"00:00:48\", \"00:00:00\", \"00:00:30\", \"00… #> $ `Distance (Miles)` <chr> \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0…  ## use by=\"zone\" for bulk retrieval (e.g. weeks or months of data) schedtest2 <- zonar_get_schedules(   start = \"2022-11-20 08:00:00\",   end = \"2022-11-28 08:30:00\",   by = \"zone\",   zones = c(\"Adams\", \"Burke\") # not required, leave out for all zones   ) dplyr::glimpse(schedtest2) #> Rows: 0 #> Columns: 0  ## use by=\"zone\" for bulk retrieval (e.g. weeks or months of data) schedtest3 <- zonar_get_schedules(   start = \"2022-11-20 08:00:00\",   end = \"2022-11-28 08:30:00\",   assets = c(\"1024\", \"1030\") # not required, leave out for all assets   ) dplyr::glimpse(schedtest3) #> Rows: 248 #> Columns: 11 #> $ zoneID             <int> 2290, 2290, 2290, 2290, 2290, 2290, 2290, 2290, 227… #> $ Zone               <chr> \"100 S Huntington\", \"100 S Huntington\", \"100 S Hunt… #> $ category           <chr> \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH… #> $ Asset              <chr> \"B412\", \"B412\", \"B412\", \"B412\", \"B412\", \"B412\", \"B4… #> $ `Asset ID`         <chr> \"1030\", \"1030\", \"1030\", \"1030\", \"1030\", \"1030\", \"10… #> $ Time               <dttm> 2022-11-21 06:18:34, 2022-11-21 06:19:11, 2022-11-… #> $ `IN/OUT`           <chr> \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\",… #> $ `Time In Zone`     <chr> NA, \"00:00:37\", NA, \"00:00:42\", NA, \"00:00:53\", NA,… #> $ Duration           <chr> \"00:37:12\", \"00:00:37\", \"00:48:55\", \"00:00:42\", \"00… #> $ `Duration Total`   <chr> \"01:00:49\", \"01:01:26\", \"25:00:49\", \"25:01:31\", \"49… #> $ `Distance (Miles)` <chr> \"12.6\", \"12.8\", \"76.6\", \"76.8\", \"137.7\", \"137.8\", \"…"},{"path":"/reference/zonar_get_schedules_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for all routes — zonar_get_schedules","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"Use zonar_get_schedules retrieve time bus (asset) reaches route anchor (zone) Zonar API Usually zonar_get_schedules_for_time zonar_get_schedules_for_zone called directly, consider using zonar_get_schedules instead.","code":""},{"path":"/reference/zonar_get_schedules_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"","code":"zonar_get_schedules(   start,   end,   by = c(\"time\", \"zone\"),   timezone = \"America/New_York\",   reformat = FALSE,   include_geometry = FALSE,   cachedir = NULL,   omit_categories = NULL,   test = FALSE )  zonar_get_schedules_for_time(   start,   end,   timezone = \"America/New_York\",   cachedir = NULL )  zonar_get_schedules_for_zone(   zoneid,   start,   end,   timezone = \"America/New_York\",   cachedir = NULL )"},{"path":"/reference/zonar_get_schedules_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. Whether split requests time zone hood. default reasonable value chosen based amount data request (.e., size interval start end. timezone Defaults \"America/New_York\" reformat TRUE cleanup re-format data row represents \"Zone event\", .e., discrete entry /exit zone. Otherwise leave date original format returned Zonar. Defaults FALSE. include_geometry TRUE also return geographic polygon showing location extent Zone. Defaults FALSE. cachedir Ignored, always uses .zonarCache now. omit_categories Character vector containing zone categories skip/omit. test Set TRUE testing purposes, otherwise slow. zoneid Integer vector length one giving Zonar id zone retrieve.","code":""},{"path":"/reference/zonar_get_schedules_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"Zonar schedule report API can give us information, . Using R wrapper makes easy retrieve bulk schedule reports Zonar API convenient format can easily saved database spreadsheet. Note retrieving data short intervals (one day less) generally faster setting = \"time\", bulk retrieval weeks months data faster setting = \"zone\". default zonar_get_shedules_all try pick best setting depending start end parameters give .","code":""},{"path":"/reference/zonar_get_schedules_all.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"zonar_get_schedules(): Get zonar schedule data routes zonar_get_schedules_for_time(): Get schedule data specific time zonar_get_schedules_for_zone(): Get schedule data specific zone","code":""},{"path":"/reference/zonar_get_schedules_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get zonar schedule data for all routes — zonar_get_schedules","text":"","code":"library(RZonar) ## use by=\"time\" for short duration, e.g. < 1 day schedtest1 <- zonar_get_schedules(   start = \"2022-11-30 08:00:00\",   end = \"2022-11-30 08:30:00\",   by = \"time\") dplyr::glimpse(schedtest1) #> Rows: 2,538 #> Columns: 11 #> $ zoneID             <int> 2272, 2272, 2272, 2272, 2290, 2290, 2290, 2290, 229… #> $ Zone               <chr> \"100 Desoto Rd\", \"100 Desoto Rd\", \"100 Desoto Rd\", … #> $ category           <chr> \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH… #> $ `Asset ID`         <chr> \"1521\", \"1521\", \"161\", \"161\", \"1051\", \"1051\", \"538\"… #> $ Asset              <chr> \"HS521\", \"HS521\", \"HS381\", \"HS381\", \"B433\", \"B433\",… #> $ Time               <dttm> 2022-11-30 08:11:17, 2022-11-30 08:12:05, 2022-11-… #> $ `IN/OUT`           <chr> \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\",… #> $ `Time In Zone`     <chr> NA, \"00:00:48\", NA, \"00:00:30\", NA, \"00:00:36\", NA,… #> $ Duration           <chr> \"00:00:00\", \"00:00:48\", \"00:00:00\", \"00:00:30\", \"00… #> $ `Duration Total`   <chr> \"00:00:00\", \"00:00:48\", \"00:00:00\", \"00:00:30\", \"00… #> $ `Distance (Miles)` <chr> \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0…  ## use by=\"zone\" for bulk retrieval (e.g. weeks or months of data) schedtest2 <- zonar_get_schedules(   start = \"2022-11-30 08:00:00\",   end = \"2022-11-30 08:30:00\",   by = \"zone\",   test = TRUE # by zone too slow otherwise   ) #> NOTE: only pulling schedule data for the first five zones; omit 'test' parameter if you want everything dplyr::glimpse(schedtest2) #> Rows: 25 #> Columns: 11 #> $ zoneID             <int> 2272, 2272, 2272, 2272, 2290, 2290, 2290, 2290, 229… #> $ Zone               <chr> \"100 Desoto Rd\", \"100 Desoto Rd\", \"100 Desoto Rd\", … #> $ category           <chr> \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH\", \"WATCH… #> $ Asset              <chr> \"HS381\", \"HS381\", \"HS521\", \"HS521\", \"B433\", \"B433\",… #> $ `Asset ID`         <chr> \"161\", \"161\", \"1521\", \"1521\", \"1051\", \"1051\", \"120\"… #> $ Time               <dttm> 2022-11-30 08:26:46, 2022-11-30 08:27:16, 2022-11-… #> $ `IN/OUT`           <chr> \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\",… #> $ `Time In Zone`     <chr> NA, \"00:00:30\", NA, \"00:00:48\", NA, \"00:00:36\", NA,… #> $ Duration           <chr> \"00:00:00\", \"00:00:30\", \"00:00:00\", \"00:00:48\", \"00… #> $ `Duration Total`   <chr> \"00:00:00\", \"00:00:30\", \"00:00:00\", \"00:00:48\", \"00… #> $ `Distance (Miles)` <chr> \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0…  schedtest <- zonar_get_schedules_for_time(   start = \"2022-11-30 08:00:00\", # the interval between start and end must be < 15   end = \"2022-11-30 08:14:00\"  # minutes, otherwise use zonar_get_schedules   ) dplyr::glimpse(schedtest) #> Rows: 1,053 #> Columns: 9 #> $ `Asset ID`         <chr> \"1521\", \"1521\", \"1051\", \"1051\", \"538\", \"538\", \"747\"… #> $ Asset              <chr> \"HS521\", \"HS521\", \"B433\", \"B433\", \"HS312\", \"HS312\",… #> $ Time               <dttm> 2022-11-30 08:11:17, 2022-11-30 08:12:05, 2022-11-… #> $ `IN/OUT`           <chr> \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\",… #> $ Zone               <chr> \"100 Desoto Rd\", \"100 Desoto Rd\", \"100 S Huntington… #> $ `Time In Zone`     <chr> NA, \"00:00:48\", NA, \"00:00:36\", NA, \"00:00:37\", NA,… #> $ Duration           <chr> \"00:00:00\", \"00:00:48\", \"00:00:00\", \"00:00:36\", \"00… #> $ `Duration Total`   <chr> \"00:00:00\", \"00:00:48\", \"00:00:00\", \"00:00:36\", \"00… #> $ `Distance (Miles)` <chr> \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0.1\", \"0.0\", \"0…  schedtest <- zonar_get_schedules_for_zone(   zoneid = 291,   start = \"2022-11-30 08:00:00\",   end = \"2022-11-30 09:00:00\") dplyr::glimpse(schedtest) #> Rows: 12 #> Columns: 9 #> $ Asset              <chr> \"HS213\", \"HS213\", \"HS225\", \"HS225\", \"HS251\", \"HS251… #> $ `Asset ID`         <chr> \"79\", \"79\", \"1282\", \"1282\", \"1442\", \"1442\", \"271\", … #> $ Time               <dttm> 2022-11-30 08:02:26, 2022-11-30 08:03:25, 2022-11-… #> $ `IN/OUT`           <chr> \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\", \"IN\", \"OUT\",… #> $ `Time In Zone`     <chr> NA, \"00:00:59\", NA, \"00:00:47\", NA, \"00:00:49\", NA,… #> $ Duration           <chr> \"00:00:00\", \"00:00:59\", \"00:00:00\", \"00:00:47\", \"00… #> $ `Duration Total`   <chr> \"00:00:00\", \"00:00:59\", \"00:00:00\", \"00:00:47\", \"00… #> $ `Distance (Miles)` <chr> \"0.0\", \"0.2\", \"0.0\", \"0.2\", \"0.0\", \"0.2\", \"0.0\", \"0… #> $ zoneID             <dbl> 291, 291, 291, 291, 291, 291, 291, 291, 291, 291, 2…"},{"path":"/reference/zonar_get_schedules_for_asset.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for a specific asset — zonar_get_schedules_for_asset","title":"Get zonar schedule data for a specific asset — zonar_get_schedules_for_asset","text":"Get zonar schedule data specific asset","code":""},{"path":"/reference/zonar_get_schedules_for_asset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for a specific asset — zonar_get_schedules_for_asset","text":"","code":"zonar_get_schedules_for_asset(   assetid,   start,   end,   timezone = \"America/New_York\",   cachedir = NULL )"},{"path":"/reference/zonar_get_schedules_for_asset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for a specific asset — zonar_get_schedules_for_asset","text":"assetid Integer vector length one giving Zonar id asset retrieve. start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. timezone Defaults \"America/New_York\" cachedir Ignored, always uses .zonarCache now.","code":""},{"path":"/reference/zonar_get_schedules_for_asset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get zonar schedule data for a specific asset — zonar_get_schedules_for_asset","text":"","code":"schedtest <- zonar_get_schedules_for_asset(   assetid = 291,   start = \"2022-11-30 08:00:00\",   end = \"2022-11-30 09:00:00\") #> Error in zonar_get_schedules_for_asset(assetid = 291, start = \"2022-11-30 08:00:00\",     end = \"2022-11-30 09:00:00\"): could not find function \"zonar_get_schedules_for_asset\" dplyr::glimpse(schedtest) #> Error in dplyr::glimpse(schedtest): object 'schedtest' not found"},{"path":"/reference/zonar_get_schedules_for_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for a given 15 minute time interval — zonar_get_schedules_for_time","title":"Get zonar schedule data for a given 15 minute time interval — zonar_get_schedules_for_time","text":"Usually zonar_get_schedules_for_time zonar_get_schedules_for_zone called directly, consider using zonar_get_schedules instead.","code":""},{"path":"/reference/zonar_get_schedules_for_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for a given 15 minute time interval — zonar_get_schedules_for_time","text":"","code":"zonar_get_schedules_for_time(   start,   end,   timezone = \"America/New_York\",   cachedir = NULL )"},{"path":"/reference/zonar_get_schedules_for_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for a given 15 minute time interval — zonar_get_schedules_for_time","text":"start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. timezone Defaults \"America/New_York\" cachedir Ignored, always uses .zonarCache now.","code":""},{"path":"/reference/zonar_get_schedules_for_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get zonar schedule data for a given 15 minute time interval — zonar_get_schedules_for_time","text":"","code":"schedtest <- zonar_get_schedules_for_time(   start = \"2022-11-30 08:00:00\", # the interval between start and end must be < 15   end = \"2022-11-30 08:14:00\"  # minutes, otherwise use zonar_get_schedules   ) #> Error in zonar_get_schedules_for_time(start = \"2022-11-30 08:00:00\", end = \"2022-11-30 08:14:00\"): could not find function \"zonar_get_schedules_for_time\" dplyr::glimpse(schedtest) #> Error in dplyr::glimpse(schedtest): object 'schedtest' not found"},{"path":"/reference/zonar_get_schedules_for_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zonar schedule data for a specific zone — zonar_get_schedules_for_zone","title":"Get zonar schedule data for a specific zone — zonar_get_schedules_for_zone","text":"Get zonar schedule data specific zone","code":""},{"path":"/reference/zonar_get_schedules_for_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zonar schedule data for a specific zone — zonar_get_schedules_for_zone","text":"","code":"zonar_get_schedules_for_zone(   zoneid,   start,   end,   timezone = \"America/New_York\",   cachedir = NULL )"},{"path":"/reference/zonar_get_schedules_for_zone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zonar schedule data for a specific zone — zonar_get_schedules_for_zone","text":"zoneid Integer vector length one giving Zonar id zone retrieve. start Character vector length one giving start time yyyy-mm-dd hh:mm:ss format. end Character vector length one giving end time yyyy-mm-dd hh:mm:ss format. timezone Defaults \"America/New_York\" cachedir Ignored, always uses .zonarCache now.","code":""},{"path":"/reference/zonar_get_schedules_for_zone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get zonar schedule data for a specific zone — zonar_get_schedules_for_zone","text":"","code":"schedtest <- zonar_get_schedules_for_zone(   zoneid = 291,   start = \"2022-11-30 08:00:00\",   end = \"2022-11-30 09:00:00\") #> Error in zonar_get_schedules_for_zone(zoneid = 291, start = \"2022-11-30 08:00:00\",     end = \"2022-11-30 09:00:00\"): could not find function \"zonar_get_schedules_for_zone\" dplyr::glimpse(schedtest) #> Error in dplyr::glimpse(schedtest): object 'schedtest' not found"},{"path":"/reference/zonar_get_zones.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Zonar Zone / Location-of-Interest data — zonar_get_zones","title":"Get Zonar Zone / Location-of-Interest data — zonar_get_zones","text":"zonar_get_zones retrieves zonar \"locations interest\" AKA zones","code":""},{"path":"/reference/zonar_get_zones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Zonar Zone / Location-of-Interest data — zonar_get_zones","text":"","code":"zonar_get_zones(zone = NULL)"},{"path":"/reference/zonar_get_zones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Zonar Zone / Location-of-Interest data — zonar_get_zones","text":"zone Optional zone name retrieve. NULL (default) retrieve zones.","code":""},{"path":"/reference/zonar_get_zone_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zone category types — zonar_get_zone_categories","title":"Get zone category types — zonar_get_zone_categories","text":"Get zone category types","code":""},{"path":"/reference/zonar_get_zone_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zone category types — zonar_get_zone_categories","text":"","code":"zonar_get_zone_categories()"},{"path":"/reference/zonar_rename_zones.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Zonar Zone / Location-of-Interest data — zonar_rename_zones","title":"Get Zonar Zone / Location-of-Interest data — zonar_rename_zones","text":"zonar_rename_zones renames zonar \"locations interest\" AKA zones","code":""},{"path":"/reference/zonar_rename_zones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Zonar Zone / Location-of-Interest data — zonar_rename_zones","text":"","code":"zonar_rename_zones(old, new)"},{"path":"/reference/zonar_rename_zones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Zonar Zone / Location-of-Interest data — zonar_rename_zones","text":"old Character vector existing zone names new Character vector replacement names","code":""},{"path":"/reference/zonar_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Create base Zonar API request — zonar_req","title":"Create base Zonar API request — zonar_req","text":"Create basic request, can reused.","code":""},{"path":"/reference/zonar_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create base Zonar API request — zonar_req","text":"","code":"zonar_req(...)"},{"path":"/reference/zonar_req.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create base Zonar API request — zonar_req","text":"... credential overrides, passed zonar_credentials. Usually leave empty set login info environment variables.","code":""}]
